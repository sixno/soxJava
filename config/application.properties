server.port=8080
server.compression.enabled=true
server.compression.min-response-size=2KB
server.compression.mime-types=image/jpeg, image/png, image/gif, text/css, text/javascript, text/html, application/javascript, application/json, application/octet-stream
server.tomcat.uri-encoding=utf-8

spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

spring.mvc.static-path-pattern=/**
spring.profiles.active=dev

# 启动程序必须cd到程序所在目录以加载当前配置
# 模块名称（main为主模块，main为保留字，主模块必须为main），推荐主模块与子模块分库，防止混淆定时（或后台）任务
sox.module=main

# 模块网关（非分布式部署模块则通常是程序运行主机ip或域名+端口，对于分布式部署模块则为前端负载地址）
sox.module_api=http://0.0.0.0:8000
# 模块静态资源网关
sox.module_url=http://0.0.0.0:8000

# 模块注册网关（即主模块网关）
sox.module_reg=

# 服务主机号，用于分布式部署时分发定时（或后台）任务，防止任务并发，只能是0~255之间的整数
# 0表示非分布式部署，分布式部署时必须是1~255之间的整数且集群内不能重复
sox.host_id=0
# 服务主机ip（或域名），分布式部署时用于绑定主机ip
# 若分布式部署时未配置该项，程序会自动从网卡信息中获取，但双网卡情况下可能会有问题
# 该配置用于集群内信息同步
sox.host_ip=

# 超级用户ID，仅主模块需要配置且仅对主模块有效
sox.super_user=10000000

# 自定义配置：汇总机构号
sox.summary_dept_no=1000

# 文件上传目录（相对于应用运行目录）
sox.upload_dir=upload

# 日志输出目录（相对于应用运行目录）
# sox.log_dir=logs
# 默认为空，日志在控制台输出
sox.log_dir=
# 日志切片定时，0~23（每日），当log_dir有值时有效
sox.log_chk=2
# 日志清理（n天前）
sox.log_cls=7
# 日志类型输出控制，为空则输出所有类型的日志
# 0 - 启动日志
# 1 - 资源请求
# 2 - sql日志
# 3 - 公式计算
# 4 - 文件操作
# 多种类型用“,”隔开
sox.log_out=

# 元数据文件目录（相对于应用运行目录）
sox.meta_dir=meta

# 数据文件目录（相对于运行目录）
sox.dat_dir=meta/dat
# 数据文件清理定时，0~23（每日）
sox.dat_chk=2
# 数据文件清理（n天前）
sox.dat_cls=3

sox.rsa.pub_key={\
"primary":""\
}
sox.rsa.pri_key={\
"primary":""\
}