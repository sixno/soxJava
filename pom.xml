<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.12</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.sox</groupId>
    <artifactId>api</artifactId>
    <version>1.0.0</version>
    <name>api</name>
    <description>Sox Api for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ibm.db2</groupId>
            <artifactId>jcc</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc8</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.49</version><!-- 为了使用8.3版本的kettle，使用低版本驱动 -->
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>9.0.41</version>
        </dependency>
        <!-- json -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>
        <!-- jep -->
        <dependency>
            <groupId>jep</groupId>
            <artifactId>jep</artifactId>
            <version>2.24</version>
        </dependency>
        <!-- quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <!-- png compress: com.sox.api.service.Img 所需依赖，用于 png 图片压缩，压缩率和压缩效果和 tinypng 相似 -->
        <dependency>
            <groupId>org.jpedal</groupId>
            <artifactId>OpenViewerFX</artifactId>
            <version>6.6.14</version>
        </dependency>
        <!-- jsoup HTML parser library @ https://jsoup.org/ -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.13.1</version>
        </dependency>
        <!-- Apache Commons IO: deal with file -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version><!-- poi 5.1.0 要求升级它 -->
        </dependency>
        <!-- Apache poi: deal with office file -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId><!-- 基础依赖 -->
            <version>5.2.2</version><!-- poi-tl 1.12.0 要求最低版本 5.2.2 -->
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId><!-- xlsx, docx -->
            <version>5.2.2</version><!-- poi-tl 1.12.0 要求最低版本 5.2.2 -->
        </dependency>
        <!-- 基于poi更好用的docx操作库，主要用于生成基于docx模板的报告文件 -->
        <dependency>
            <groupId>com.deepoove</groupId>
            <artifactId>poi-tl</artifactId>
            <version>1.12.0</version>
        </dependency>

        <!-- 依赖升级 -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.9</version><!-- history: -->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.2.9</version><!-- history: -->
        </dependency>

        <!-- kettle start -->
        <!-- 需要使用mvn将依赖库安装到本地仓库 -->
        <!-- 需要手动安装的依赖在工程目录lib下 -->
        <!-- mvn install:install-file -DgroupId=com.group -DartifactId=artifact -Dversion=0.0.0 -Dpackaging=jar -Dfile=package-0.0.0.jar -->
        <!-- cd lib -->
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.46</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=org.pentaho.di -DartifactId=kettle-core -Dversion=8.3.0.0-371 -Dpackaging=jar -Dfile=kettle-core-8.3.0.0-371.jar -->
            <groupId>org.pentaho.di</groupId>
            <artifactId>kettle-core</artifactId>
            <version>8.3.0.0-371</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=org.pentaho.di -DartifactId=kettle-engine -Dversion=8.3.0.0-371 -Dpackaging=jar -Dfile=kettle-engine-8.3.0.0-371.jar -->
            <groupId>org.pentaho.di</groupId>
            <artifactId>kettle-engine</artifactId>
            <version>8.3.0.0-371</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=org.pentaho.metastore -DartifactId=metastore -Dversion=8.3.0.0-371 -Dpackaging=jar -Dfile=metastore-8.3.0.0-371.jar -->
            <groupId>org.pentaho.metastore</groupId>
            <artifactId>metastore</artifactId>
            <version>8.3.0.0-371</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=org.apache.commons -DartifactId=commons-vfs2 -Dversion=2.2 -Dpackaging=jar -Dfile=commons-vfs2-2.2.jar -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-vfs2</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=org.apache.commons -DartifactId=commons-lang -Dversion=2.6 -Dpackaging=jar -Dfile=commons-lang-2.6.jar -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=org.apache.commons -DartifactId=commons-logging -Dversion=1.1.3 -Dpackaging=jar -Dfile=commons-logging-1.1.3.jar -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=org.apache.commons -DartifactId=commons-collections -Dversion=3.2.2 -Dpackaging=jar -Dfile=commons-collections-3.2.2.jar -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency><!-- mvn install:install-file -DgroupId=com.google.guava -DartifactId=guava -Dversion=17.0 -Dpackaging=jar -Dfile=guava-17.0.jar -->
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>17.0</version>
        </dependency>
        <!-- kettle end -->
    </dependencies>

    <build><!-- mvn clean package [-DskipTests | -Dmaven.test.skip=true] -->
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
